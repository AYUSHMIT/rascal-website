# Union

.Synopsis
Union of two maps.

.Syntax
`_Exp_~1~ + _Exp_~2~`

.Types
|====
| `$Exp_1$`             |  `$Exp_2$`             | `$Exp_1$ + $Exp_2$`                            |
|:----------------------|:-----------------------|:-----------------------------------------------|
| `map[$TK_1$, $TV_1$]` |  `map[$TK_2$, $TV_2$]` | `map[lub($TK_1$,$TK_2$),lub($TK_1$,$TK_2$) ]`  |
|====

.Function

.Details

.Description
The result is the union of the two map values of _Exp_~1~ and _Exp_~2~.
If they have a pair with the same key in common, that key will be associated
in the union with the value associated with that key in _Exp_~2~.

.Examples
[source,rascal-shell]
----
("apple": 1, "pear": 2) + ("banana": 3, "kiwi": 4);
("apple": 1, "pear": 2) + ("banana": 3, "apple": 4);
----

.Benefits
Map union is very suited for representing environment composition in interpreters.

.Pitfalls

