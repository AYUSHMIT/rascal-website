Name: Splice

Synopsis: Splice the elements of a list in an enclosing list.

Syntax: `*$Exp$`

Types:
|`$Exp$` | `$Exp_1$`|  `$Exp_n$` | `[$Exp_1$, ..., $Exp$, ..., $Exp_n$]` |
|:-------|:---------|:-----------|:----------------------------------|
|`$T$`   | `$T_1$`  |  `$T_n$`   | `list[lub($T_1$, ..., $T$, ...,$T_n$)]`    |

Function:
       
Usage:

Details:

Description:
The operator `*` splices the elements of a list in an enclosing list.

Examples:
<screen>
//Consider the following list in which the list `[10, 20, 30]` occurs as list element. It has as type `list[value]`:
[1, 2, [10, 20, 30], 3, 4];
//The effect of splicing the same list element in the enclosing list gives a flat list of type `list[int]`:
[1, 2, *[10, 20, 30], 3, 4];
//The same example can be written as:
L = [10, 20, 30];
[1, 2, *L, 3, 4];
</screen>

Benefits: The splicing operator gives full, explicit, control over the way
in which nested lists are handled.

Pitfalls:

Questions:

       