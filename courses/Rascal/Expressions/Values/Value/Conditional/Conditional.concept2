# Conditional

.Synopsis
Conditional expression on values.

.Syntax
`_Exp_~1~ ? _Exp_~2~ : _Exp_~3~`

.Types
|====
| `$Exp_1$`  | `$Exp_2$` | `$Exp_3$` | `$Exp_1$ ? $Exp_2$ : $Exp_3$` |
|:-----------|:----------|:----------|-------------------------------|
|   `bool`   | `$T_2$`   | `$T_3$`   | `lub($T_2$,$T_3$)`            |
|====

.Function

.Details

.Description
Yields the value of _Exp_~2~ if the value of _Exp_~1~ is `true` and the value of _Exp_~3~ otherwise.
The result type is the _least upper bound_ (also known as `lub`, see <<Declarations-StaticTyping>>) of the types of _Exp_~2~ and _Exp_~3~.

.Examples
[source,rascal-shell]
----
( 3 > 2 ) ? 30 : 40;
( 3 < 2 ) ? "abc" : {3, 4};
----

.Benefits

.Pitfalls

